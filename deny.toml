# Configuration for cargo-deny

[graph]
# Configure dependency graph features
all-features = true

[licenses]
# Allow specific licenses
allow = [
    "MIT",
    "Apache-2.0",
    "Apache-2.0 WITH LLVM-exception",
    "BSD-2-Clause",
    "BSD-3-Clause",
    "ISC",
    "Unicode-DFS-2016",
    "Unicode-3.0",  # Required by unicode-ident
    "CC0-1.0",
    "Unlicense",
    "AGPL-3.0",  # Our license
]

# Confidence threshold for license detection
confidence-threshold = 0.8

# Some crates don't have license files, so we can manually specify their licenses
[[licenses.clarify]]
name = "ring"
expression = "MIT AND ISC AND OpenSSL"
license-files = [
    { path = "LICENSE", hash = 0xbd0eed23 }
]

[bans]
# Lint level for when a crate marked as 'deny' is used
deny = [
    # Deny old crypto libraries
    { name = "openssl", reason = "Use saorsa-pqc or ring instead" },
    { name = "md5", reason = "MD5 is cryptographically broken" },
    { name = "sha1", reason = "SHA1 is deprecated" },
]

# Skip certain crates when doing duplicate detection
skip = []

# Similarly to `skip` allows you to skip certain crates from being checked
# but applies transitively to all dependencies
skip-tree = []

[advisories]
# The path where the advisory database is cloned/fetched into
db-path = "~/.cargo/advisory-db"

# The url(s) of the advisory databases to use
db-urls = ["https://github.com/rustsec/advisory-db"]

# Ignore specific advisory IDs
ignore = []

[sources]
# Lint level for what to happen when a crate from a crate registry that is
# not in the allow list is encountered
unknown-registry = "warn"

# Lint level for what to happen when a crate from a git repository that is not
# in the allow list is encountered
unknown-git = "warn"

# List of allowed registries
allow-registry = ["https://github.com/rust-lang/crates.io-index"]

# List of allowed Git repositories
allow-git = []